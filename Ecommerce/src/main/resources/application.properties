
#==================================
# = Datasource
#==================================
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace

#tenere d'occhio questo parametro
spring.jpa.hibernate.ddl-auto=create
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/ecommerce
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#==================================
# = Web server
#==================================
server.port=8080


#===================================
# = Aumento dimensioni upload
#==================================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB


#==================================
# = Thymeleaf configurations
#==================================
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.encoding=ISO-8859-1
spring.application.name=Ecommerce
spring.resource.static-locations=classpath:/static/
#==================================
# Email settings
#==================================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=jaorru03@gmail.com
spring.mail.password=jrbfbglershxtufd
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
#==================================
# Oauth
#==================================
spring.security.oauth2.client.registration.google.client-id=390176028055-6r70ufri7iciv59asae0irk7jbcdl12q.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid, profile, email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google

